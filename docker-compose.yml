version: '3.8'

services:
  frontend-service:
    #environment:
     # API_BASE_URL: "http://backend:8081"
    container_name: frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost || exit 1
" ]
      interval: 30s
      start_period: 60s
      timeout: 3s
    restart: unless-stopped
    depends_on:
      backend-service:
        condition: service_healthy
    networks:
      - custom-bridge

  backend-service:
    deploy:
      resources:
        limits:
          memory: 8192m
        reservations:
          memory: 4096m
    #depends_on:
    #  postgres:
    #    condition: service_healthy
    container_name: backend
#    environment:
#      CATALINA_OPTS: "-Dorg.apache.catalina.webresources.Cache.MAX_SIZE=500000"
#      ALPINE_DATABASE_MODE: "external"
#      ALPINE_DATABASE_URL: "postgres:5432/dtrack"
#      ALPINE_DATABASE_DRIVER: "org.postgresql.Driver"
#      ALPINE_DATABASE_USERNAME: "dtrack"
#      ALPINE_DATABASE_PASSWORD: "dtrack"
    build:
      context: ../dependency-track
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
#    command: tail -f /dev/null
#    command: java $JAVA_OPTS -Dlogback.configurationFile=logback.xml -jar dependency-track-apiserver.jar    
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/api/version || exit 1
" ]
      interval: 30s
      start_period: 60s
      timeout: 3s
    restart: unless-stopped
    networks:
      - custom-bridge

#  postgres:
#    container_name: postgres
#    image: postgres:17-alpine
#    environment:
#      POSTGRES_DB: "dtrack"
#      POSTGRES_USER: "dtrack"
#      POSTGRES_PASSWORD: "dtrack"
#    #healthcheck:
#    #  test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
#    #  interval: 5s
#    #  timeout: 3s
#    #  retries: 3
#    #restart: unless-stopped
#    ports:
#      - "5432:5432"
#    networks:
#      - custom-bridge
networks:
  custom-bridge:
    driver: bridge
